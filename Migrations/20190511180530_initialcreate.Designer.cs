// <auto-generated />
using System;
using GestionDeMedicamentos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GestiónDeMedicamentos.Migrations
{
    [DbContext(typeof(PostgreContext))]
    [Migration("20190511180530_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GestiónDeMedicamentos.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Drug");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DrugId");

                    b.Property<string>("Laboratory");

                    b.Property<string>("Name");

                    b.Property<decimal>("Proportion");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.MedicinePrescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MedicineId");

                    b.Property<int?>("PrescriptionId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PrescriptionId");

                    b.ToTable("MedicinePrescription");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.MedicinePurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<int?>("MedicineId");

                    b.Property<int?>("PurchaseOrderId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("MedicinePurchaseOrder");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.MedicineStockOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MedicineId");

                    b.Property<int>("Quantity");

                    b.Property<int?>("StockOrderId");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("StockOrderId");

                    b.ToTable("MedicineStockOrder");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.StockOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.ToTable("StockOrder");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.Medicine", b =>
                {
                    b.HasOne("GestiónDeMedicamentos.Models.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.MedicinePrescription", b =>
                {
                    b.HasOne("GestiónDeMedicamentos.Models.Medicine", "Medicine")
                        .WithMany("MedicinePrescriptions")
                        .HasForeignKey("MedicineId");

                    b.HasOne("GestiónDeMedicamentos.Models.Prescription", "Prescription")
                        .WithMany("MedicinePrescriptions")
                        .HasForeignKey("PrescriptionId");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.MedicinePurchaseOrder", b =>
                {
                    b.HasOne("GestiónDeMedicamentos.Models.Medicine", "Medicine")
                        .WithMany("MedicinePurchaseOrders")
                        .HasForeignKey("MedicineId");

                    b.HasOne("GestiónDeMedicamentos.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("MedicinePurchaseOrders")
                        .HasForeignKey("PurchaseOrderId");
                });

            modelBuilder.Entity("GestiónDeMedicamentos.Models.MedicineStockOrder", b =>
                {
                    b.HasOne("GestiónDeMedicamentos.Models.Medicine", "Medicine")
                        .WithMany("MedicineStockOrders")
                        .HasForeignKey("MedicineId");

                    b.HasOne("GestiónDeMedicamentos.Models.StockOrder", "StockOrder")
                        .WithMany("MedicineStockOrders")
                        .HasForeignKey("StockOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
